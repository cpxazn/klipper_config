[gcode_macro START_PRINT]
description: Commands to run when a print is started
gcode:        
    # Parameters
    {% set hotend_temp = params.HOTEND|default(200)|int %}
    {% set hotend_preheat = (hotend_temp - 60) if (hotend_temp - 60) <= 150 else 150 %}
    {% set bed_temp = params.BED|default(60)|int %}
    {% set machine_depth = printer.configfile.config.stepper_y.position_max|float %}
    {% set prime_depth = machine_depth - (machine_depth * 0.1) %}
    #{% set prime_depth = '%0.2f'|format(prime_depth|float) %}
    {% set purge = params.PURGE|default(0)|int %}
    {% set start_x = params.START_X|default(0.1)|int %}
    {% set probe = params.PROBE|default(0)|int %}
    {% set z_tilt = params.Z_TILT|default(0)|int %}
    {% set z_calibrate = params.Z_CALIBRATE|default(0)|int %}
    {% set quad_gantry = params.QUAD_GANTRY|default(0)|int %}
    {% set heat_soak = params.HEAT_SOAK|default(0)|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}
    {% set sensor = params.SENSOR|default("")|string %}
    {% set unusable_y = printer["gcode_macro _User_Variables"].unusable_y|default(0) %}
    {% set klicky = printer["gcode_macro _User_Variables"].klicky|default(False) %}
    {% set rgb = printer.save_variables.variables.rgb|default(0)|int %}

    CLEAR_PAUSE
    remove_idle_timer

    G90 ; Absolute positioning

    {% if rgb == 1 %}
      status_heating
    {% endif %}

    M140 S{bed_temp} ; Set Heat Bed Temperature

    {% if heat_soak > 0 %}
      M190 S{bed_temp} ; Wait for Heat Bed temperature
      M118 Heat soaking for { heat_soak } minutes
      G4 P{ heat_soak * 1000 * 60 } ; Let heat up for this amount of minutes
      M118 Heat soaking complete
    {% endif %}

    {% if chamber > 0 %}
      G28
      G1 Z12
      M118 Waiting for chamber to hit {chamber}
      TEMPERATURE_WAIT SENSOR="{sensor}" MINIMUM={chamber}
    {% endif %}

    M104 S{hotend_preheat} ; Set Nozzle Temperature
    M190 S{bed_temp} ; Wait for Heat Bed temperature
    M109 S{hotend_preheat} ; Wait for Extruder temperature

    {% if rgb == 1 %}
      status_homing
    {% endif %}
    G28 

    {% if rgb == 1 %}
      status_leveling
    {% endif %}

    {% if z_tilt == 1 %}
      M118 Z TILT
      Z_TILT_ADJUST
    {% elif quad_gantry == 1 %}
      M118 Z QUAD_GANTRY_LEVEL
      QUAD_GANTRY_LEVEL
    {% endif %}

    {% if z_calibrate == 1 %}
      CALIBRATE_Z
    {% endif %}
    
    {% if probe == 1 %}
      {% set last_probe = printer.save_variables.variables.last_probe|int %}
      {action_respond_info("Last Probe was %.0f prints ago" % (last_probe))}
      {% set last_probe = last_probe + 1 %}
      {% if last_probe >= printer.save_variables.variables.prints_til_probe|int %}
        {% if rgb == 1 %}
          status_meshing
        {% endif %}
        M118 Recreating Bed Mesh
        BED_MESH SAVE=0
        SAVE_VARIABLE VARIABLE=last_probe VALUE=1
        SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=save VALUE=1
      {% else %}
        SAVE_VARIABLE VARIABLE=last_probe VALUE={last_probe}
        SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=save VALUE=0
      {% endif %}
      BED_MESH_PROFILE LOAD=default ; Load Default Mesh
    {% else %}
      SET_GCODE_VARIABLE MACRO=END_PRINT VARIABLE=save VALUE=0
      BED_MESH_CLEAR
    {% endif %}
    
    # Klicky probe check
    {% if klicky %}
      Dock_Probe
      QUERY_ENDSTOPS
      Dock_Probe_Verify
    {% endif %}
    
    M104 S{hotend_temp} ; Set Extruder temperature

    G92 E0 ; Reset Extruder
    G1 X{start_x} Y20 Z0.3 F5000.0 ; Move to start position

    {% if rgb == 1 %}
      status_heating
    {% endif %}
    
    M109 S{hotend_temp} ; Wait for Extruder temperature
    
    # Prime nozzle
    {% if purge == 1 %}
      {% if rgb == 1 %}
        status_cleaning
      {% endif %}
      {% if (printer.toolhead.axis_maximum.y - unusable_y) < prime_depth %}
        {% set prime_depth = printer.toolhead.axis_maximum.y - unusable_y %}
      {% endif %}
      G1 X{start_x} Y{prime_depth} Z0.3 F900.0 E15 ; Draw the first line
      G1 X{start_x + 0.3} Y{prime_depth} Z0.3 F5000.0 ; Move to side a little
      G1 X{start_x + 0.3} Y20 Z0.3 F900.0 E30 ; Draw the second line
      G92 E0 ; Reset Extruder
      G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
      G1 X{start_x + 4.6} Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
    {% endif %}

    {% if rgb == 1 %}
      status_printing
    {% endif %}
    

[gcode_macro END_PRINT]
description: Commands to run when a print ends
variable_save: 0
gcode:
  {% set machine_depth = params.MACHINE_DEPTH|default(printer.configfile.config.stepper_y.position_max)|int %}
  {% set unusable_y = printer["gcode_macro _User_Variables"].unusable_y|default(10) %}
  {% set machine_depth = machine_depth - unusable_y %} ; reduce to prevent potential damage
  {% set z_bed = params.Z_BED|default(0)|int %}
  {% set retract = params.RETRACT|default(3.0)|float %}
  {% set retract_speed = params.RETRACT_SPEED|default(40)|int %}
  
  ##### calculate safe lift position #####
  {% set z = params.Z|default(30)|float %} #edit to your park position
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z - 0.2 %}
  {% else %}
      {% set z_safe = max_z - act_z - 0.2 %}
  {% endif %}
  ##### end of definitions ##### 

  G91 ;Relative positioning
  G1 E-{retract} F{retract_speed*60} ;Retract a bit
  G1 E-{retract} Z0.2 F{retract_speed*60} ;Retract and raise Z
  #G1 X5 Y5 F3000 ;Wipe out
  G1 Z{z_safe} ;Raise Z more
  G90 ;Absolute positioning

  G1 X0 Y{machine_depth} ;Present print

  {% if z_bed == 1 and printer.toolhead.position.z > (printer.toolhead.axis_maximum.x - 30) %}
    G1 Z{printer.toolhead.axis_maximum.x - 30}
  {% endif %}

  M84 X Y E ;Disable all steppers but Z
  M104 S0 ;Turn-off hotend
  M106 S0 ;Turn-off fan

  {% set rgb = printer.save_variables.variables.rgb|default(0)|int %}
  {% set slow_cooldown = params.SLOW_COOLDOWN|default(0)|int %}
  {% if slow_cooldown == 1 %}
    M118 Starting slow cooldown
    {% if rgb == 1 %}
      status_heating
    {% endif %}
    
    {% set decrements = params.DECREMENTS|default(5)|int %}
    {% set start_temp = (printer.heater_bed.target - decrements)|int %}
    {% set end_temp = params.END_TEMP|default(40)|int %}
    {% set i = ((start_temp - end_temp) / decrements) | int  %}
    {% set step_duration = params.STEP_DURATION|default(5)|int %}

    M118 Slow Cooldown from {start_temp} to {end_temp} decreasing by {decrements} every {step_duration} minutes ({i + 1} x {step_duration} = {(i+1)*step_duration} minutes)

    {% if i >= 0 %}
      {% for _ in range(0, i + 1) %}
        {% set j =  i - (loop.index - 1) %}
        {% set target = end_temp + ( j * decrements ) %}
        M140 S{target} ; Set Heat Bed Temperature
        M190 S{target} ; Wait for Heat Bed temperature
        G4 P{step_duration * 60 * 1000}
      {% endfor %}
    {% endif %}
    M118 Slow cooldown complete
  {% endif %}

  M140 S0 ;Turn-off bed

  {% if rgb == 1 %}
    status_ready
  {% endif %}

  RUN_SHELL_COMMAND CMD=SEND_EMAIL_COMPLETE

  {% if printer["gcode_macro END_PRINT"].save == 1 %}
    SAVE_CONFIG
    #UPDATE_DELAYED_GCODE ID=delayed_restart DURATION=3
  {% endif %}
  

[gcode_macro PAUSE]
description: Commands to run when a print is paused
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  
  ##### set defaults #####
  {% set x = params.X|default(1) %}       #edit to your park position
  #{% set y = params.Y|default(3) %}      #edit to your park position
  {% set z = params.Z|default(10)|float %} #edit to your park position
  {% set e = params.E|default(1) %}        #edit to your retract length
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  {% if rgb == 1 %}
    status_busy
  {% endif %}
  M118 Pausing
  PAUSE_BASE
  G91
  G1 E-{e} F300
  G1 Z{z_safe}
  G90
  #G1 X{x} Y{y} F4000
  G1 X{x} F4000

[gcode_macro RESUME]
description: Commands to run when a print is resumed from pause
rename_existing: RESUME_BASE
gcode:
  {% set e = params.E|default(1) %} #edit to your retract length
  M118 Resuming
  G91
  G1 E{e} F300
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  RESUME_BASE  
  {% if rgb == 1 %}
    status_printing
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Commands to run when a print is cancelled
rename_existing: CANCEL_PRINT_BASE
gcode:
  M118 Cancelling Print
  {% set ENDY = printer.toolhead.axis_maximum.y - 20 %}
  {% set retract = params.RETRACT|default(1.0)|float %}
  {% set retract_speed = params.RETRACT_SPEED|default(15)|int %}

  ##### calculate safe lift position #####
  {% set z = params.Z|default(30)|float %} #edit to your park position
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions ##### 

  G91       
  G1 E-{retract} F{retract_speed*60}
  G1 E-{retract} Z0.2 F{retract_speed*60}
  
  G1 Z{z_safe} F4000
  G90
  G1 X0 Y{ENDY}
  M84 X Y E
  M106 S0
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  CANCEL_PRINT_BASE
  {% if rgb == 1 %}
    status_ready
  {% endif %}

[gcode_macro M600]
description: Filament change macro, pauses the print and ejects the filament
gcode:
  {% if printer.extruder.can_extrude == 0 and printer.extruder.target < 150 %}
    M118 Filament Change - Heating Hotend
    M109 S220
  {% endif %}  
  {% if printer.toolhead.homed_axes != "xyz" %}
    M118 Filament Change - Homing
    G28
  {% endif %}

  {% if printer.idle_timeout.state == "Printing" %}
    {% if printer.pause_resume.is_paused == 0 %}
      PAUSE
    {% endif %}
    RUN_SHELL_COMMAND CMD=SEND_EMAIL_CHANGE
  {% else %}
    {% set z = params.Z|default(40)|float %} #edit to your park position
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    G91
    G1 Z{z_safe}
  {% endif %}
  SAVE_GCODE_STATE NAME=M600_state
  G91
  M118 Filament Change - Unloading Filament
  G1 E5 F1000
  G1 E-150 F300
  M118 Filament Change - Done
  RESTORE_GCODE_STATE NAME=M600_state